#include <iostream>
#include <Windows.h>
using namespace std;

class logicAlgorithm {
private:
	//两个逻辑变量
	bool p;
	bool q;
	//保存答案的数组
	bool* ans;
	
	/***************************************************************************
	函数名称：Input
	功    能：用户输入函数，输入两个命题变量的值
	输入参数：
	返 回 值：bool，true表示输入错误需要重新输入
					false表示输入正确
	说    明：需要对输入的值判断，输入错误给出相应提示并请求重新输入
	***************************************************************************/
	bool Input() {
		cout << "***************************************" << endl;
		cout << "**                                   **" << endl;
		cout << "**        欢迎进入逻辑运算程序       **" << endl;
		cout << "**                                   **" << endl;
		cout << "***************************************" << endl;
		//p的输入
		cout << endl << "  请输入P的值（0或1）,以回车结束:";
		cin >> p;
		if (cin.fail()) {
			cout << endl << "  P的值输入有误,请重新输入!";
			cin.clear();
			cin.ignore(65536, '\n');
			Sleep(2000);
			system("cls"); //清屏
			return true;
		}
			
		cout << endl << "  请输入Q的值（0或1）,以回车结束:";
		cin >> q;
		if (cin.fail())
		{
			cout << endl << "  Q的值输入有误,请重新输入!";
			cin.clear();
			cin.ignore(65536, '\n');
			Sleep(2000);
			system("cls"); //清屏
			return true;
		}
		
		//输入正确
		return false;
	}
	/***************************************************************************
	函数名称：Output
	功    能：计算逻辑运算后的值并输出
	输入参数：
	返 回 值：
	说    明：
	***************************************************************************/
	void Output() {
		//计算逻辑运算并输出
		ans[0] = p && q;  //与运算
		ans[1] = p || q;  //或运算
		ans[2] = (!p) || q;  //蕴含运算，将其转化为与或非形式
		ans[3] = ((!p) || q) && ((!q) || p);  //等值运算，将其转化为与或非形式
		cout << "\n\n  合取:\n       P/\\Q = " << ans[0] << "\n";  //输出结果
		cout << "  析取:\n       P\\/Q = " << ans[1] << "\n";
		cout << "  条件:\n       P->Q = " << ans[2] << "\n";
		cout << "  双条件:\n       P<->Q = " << ans[3] << "\n";
	}
	/***************************************************************************
	函数名称：YorN
	功    能：接收用输入是否继续下一轮
	输入参数：
	返 回 值：bool，true表示输入y或者Y，用户希望继续下一轮
					false表示输入n或者N，用户希望结束
	说    明：
	***************************************************************************/
	bool YorN() {
		//暂时接受用户输入的字符型变量
		char temp = '\0';
		while (1)
		{
			cout << "\n是否继续运算?（y/n）";  //询问是否继续操作
			cin >> temp;
			//输入正确
			if (temp == 'y' || temp == 'n'
				|| temp == 'Y' || temp == 'N')
			{
				//进行下一轮循环
				if (temp == 'Y' || temp == 'y')
				{
					system("cls"); //清屏
					break;
				}
				//结束
				else
				{
					cout << "欢迎下次再次使用!\n";  //退出
					break;
				}
			}
			//输入错误
			else
			{
				if (cin.fail())
				{
					cin.clear();
					cin.ignore(65536, '\n');
				}
				cout << "输入错误，请重新输入!" << endl;
			}
		}
		//如果是yes就返回true，表示继续下一轮
		return temp == 'Y' || temp == 'y';
	}
public:
	/***************************************************************************
	函数名称：solution
	功    能：对外接口
	输入参数：
	返 回 值：
	说    明：
	***************************************************************************/
	void solution()
	{
		bool loop = true;
		while (loop)
		{
			//设置输入标志，接受输入函数的返回值
			bool inputFlag = true;
			//返回值为false说明输入正确，跳出循环
			while (inputFlag)
				inputFlag = this->Input();
			//输出答案
			this->Output();
			//接受返回参数决定是否继续下一轮循环
			loop = this->YorN();

		}
		//等待用输入输入再关闭cmd窗口
		cin.clear();
		cin.ignore(65536, '\n');
		cout << "请按任意键退出..." << endl;
		cin.get();
	}
	/***************************************************************************
	函数名称：logicAlgorithm
	功    能：构造函数，初始化数据成员
	输入参数：
	返 回 值：
	说    明：
	***************************************************************************/
	logicAlgorithm() :p(false), q(false), ans(NULL) {
		//保存答案的数组申请空间
		ans = new(nothrow) bool[4];
		if (ans == NULL)
		{
			cerr << "申请空间失败！" << endl;
			exit(1);
		}
	}
	/***************************************************************************
	函数名称：~logicAlgorithm
	功    能：析构函数，释放动态申请的空间
	输入参数：
	返 回 值：
	说    明：
	***************************************************************************/
	~logicAlgorithm() {
		delete[] ans;
	}
};


int main() {
	logicAlgorithm A;
	A.solution();
	return 0;
}